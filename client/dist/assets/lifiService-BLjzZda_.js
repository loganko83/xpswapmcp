import{P as m,R as l,S as p,T as h}from"./vendor-C9R_Cz-L.js";h({integrator:"XpSwap"});class u{constructor(){this.chains=[],this.tokens=new Map}async initialize(){try{const e=await m();this.chains=e.map(t=>({id:t.id,name:t.name,symbol:t.coin,logoURI:t.logoURI||"",rpcUrls:[t.metamask?.rpcUrls?.[0]||""],blockExplorerUrls:[t.metamask?.blockExplorerUrls?.[0]||""],nativeCurrency:{name:t.nativeCurrency?.name||t.coin,symbol:t.nativeCurrency?.symbol||t.coin,decimals:t.nativeCurrency?.decimals||18}}));const o=[1,56,137,42161,10];for(const t of o)try{const s=await l({chains:[t]});this.tokens.set(t,s.tokens[t]||[])}catch(s){console.warn(`Failed to load tokens for chain ${t}:`,s)}}catch(e){console.error("Failed to initialize LI.FI service:",e)}}getSupportedChains(){return this.chains}getTokensForChain(e){return this.tokens.get(e)||[]}async getBridgeQuote(e,o,t,s,a,c){try{const r=await p({fromChain:e,toChain:o,fromToken:t,toToken:s,fromAmount:a,fromAddress:c,toAddress:c});return r?{id:r.id||Date.now().toString(),fromChain:e,toChain:o,fromToken:t,toToken:s,fromAmount:a,toAmount:r.estimate.toAmount,estimatedTime:r.estimate.executionDuration||300,gasCost:r.estimate.gasCosts?.[0]?.estimate||"0",bridgeFee:r.estimate.feeCosts?.[0]?.amount||"0",routes:[r],provider:r.toolDetails?.name||"LI.FI"}:null}catch(n){return console.error("Failed to get bridge quote:",n),null}}async executeBridge(e,o){try{return console.log("Executing bridge transaction:",e),null}catch(t){return console.error("Failed to execute bridge:",t),null}}async getTransactionStatus(e,o){try{return"completed"}catch(t){return console.error("Failed to get transaction status:",t),"failed"}}isChainSupported(e){return this.chains.some(o=>o.id===e)}async getBestRoute(e,o,t,s){const a=this.getTokensForChain(e),c=this.getTokensForChain(o),n=a.find(i=>i.symbol===t),r=c.find(i=>i.symbol===t);return!n||!r?null:this.getBridgeQuote(e,o,n.address,r.address,s)}}const y=new u,g={ETHEREUM:{chainId:1,name:"Ethereum",symbol:"ETH",rpcUrls:["https://eth.llamarpc.com","https://rpc.ankr.com/eth","https://ethereum.publicnode.com","https://eth.rpc.blxrbdn.com"],blockExplorer:"https://etherscan.io",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18}},BSC:{chainId:56,name:"BNB Smart Chain",symbol:"BNB",rpcUrls:["https://bsc-dataseed1.defibit.io","https://bsc-dataseed.binance.org","https://rpc.ankr.com/bsc","https://bsc.publicnode.com"],blockExplorer:"https://bscscan.com",nativeCurrency:{name:"BNB",symbol:"BNB",decimals:18}},POLYGON:{chainId:137,name:"Polygon",symbol:"MATIC",rpcUrls:["https://polygon-rpc.com","https://rpc.ankr.com/polygon","https://polygon.llamarpc.com","https://polygon.publicnode.com"],blockExplorer:"https://polygonscan.com",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18}},ARBITRUM:{chainId:42161,name:"Arbitrum One",symbol:"ETH",rpcUrls:["https://arb1.arbitrum.io/rpc","https://rpc.ankr.com/arbitrum","https://arbitrum.publicnode.com","https://arbitrum.llamarpc.com"],blockExplorer:"https://arbiscan.io",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18}},OPTIMISM:{chainId:10,name:"Optimism",symbol:"ETH",rpcUrls:["https://mainnet.optimism.io","https://rpc.ankr.com/optimism","https://optimism.publicnode.com","https://optimism.llamarpc.com"],blockExplorer:"https://optimistic.etherscan.io",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18}},XPHERE:{chainId:20250217,name:"Xphere",symbol:"XP",rpcUrls:["https://en-bkk.x-phere.com"],blockExplorer:"https://explorer.x-phere.com",nativeCurrency:{name:"Xphere",symbol:"XP",decimals:18}}};export{g as S,y as l};
